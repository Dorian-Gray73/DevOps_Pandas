# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ jacocoBadgeGen ]
  pull_request:
    branches: [ jacocoBadgeGen ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Build with Maven
      run: mvn -B package --file pandas/pom.xml

    - name: Setup badges directory
      run: mkdir -p .github/badges

    - name: jacoco-badge-generator
      id: jacoco
      # You may pin to the exact commit or the version.
      # uses: cicirello/jacoco-badge-generator@bce93b1f42572a20200386583e26fe0c397c0944
      uses: cicirello/jacoco-badge-generator@v2.6.1
      with:
        # Full path, relative to the root of the repository, to the jacoco csv file(s), including filename(s)
        jacoco-csv-file: pandas/target/site/jacoco-ut/jacoco.csv # optional, default is target/site/jacoco/jacoco.csv
        # The directory for storing badges, relative to the root of the repository.
        badges-directory: .github/badges # optional, default is .github/badges
        generate-branches-badge: true
        generate-summary: true

    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branches = ${{ steps.jacoco.outputs.branches }}"

    - name: Commit and push the coverage badges and summary file
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        cd .github/badges
        if [[ `git status --porcelain *.svg *.json` ]]; then
          git config --global user.name 'github-actions'
          git config --global user.email 'action@github.com'
          git add *.svg *.json
          git commit -m "Autogenerated JaCoCo coverage badges" *.svg *.json
          git push
        fi

    - name: Comment on PR with coverage percentages
      if: ${{ github.event_name == 'pull_request' }}
      run: |
        REPORT=$(<badges/coverage-summary.json)
        COVERAGE=$(jq -r '.coverage' <<< "$REPORT")%
        BRANCHES=$(jq -r '.branches' <<< "$REPORT")%
        NEWLINE=$'\n'
        BODY="## JaCoCo Test Coverage Summary Statistics${NEWLINE}* __Coverage:__ ${COVERAGE}${NEWLINE}* __Branches:__ ${BRANCHES}"
        gh pr comment ${{github.event.pull_request.number}} -b "${BODY}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}